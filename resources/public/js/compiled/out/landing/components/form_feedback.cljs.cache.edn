{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name landing.components.form-feedback, :imports nil, :requires {re-frame.core re-frame.core, db landing.db, landing.db landing.db, u landing.utils, landing.utils landing.utils}, :cljs.spec/speced-vars [], :uses {subscribe re-frame.core, dispatch re-frame.core}, :defs {form-feedback {:protocol-inline nil, :meta {:file "/home/lexa/projects/unionchc/landing/src/cljs/landing/components/form_feedback.cljs", :line 6, :column 7, :end-line 6, :end-column 20, :arglists (quote ([]))}, :name landing.components.form-feedback/form-feedback, :variadic false, :file "src/cljs/landing/components/form_feedback.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:placeholder :button :name :value :type :feedback/update :textarea :div :data-validation-required-message :id :class :form :input :on-change :p :db/feedback :required}, :order [:db/feedback :form :name :id :div :class :input :type :placeholder :required :value :on-change :data-validation-required-message :feedback/update :p :textarea :button]}, :doc nil}